
**********PROCEDIMIENTO 1**************
CREATE OR REPLACE FUNCTION MUESTRAAEROPUERTO () 
RETURNS SETOF "record" AS 
$body$ 
SELECT AER.IDAERO AS CODIGO,AER.NOMBRE AS AEROPUERTO, PAI.PAIS AS PAIS
	FROM AEROPUERTO AER
	JOIN PAIS PAI ON AER.IDPAIS=PAI.IDPAIS
$body$ 
LANGUAGE 'sql' VOLATILE;


SELECT * FROM MUESTRAAEROPUERTO() AS ("CODIGO" CHARACTER,"AEROPUERTO" TEXT,"PAIS" TEXT);
   


**********PROCEDIMIENTO 2**************+++


CREATE OR REPLACE FUNCTION ejemplo2() RETURNS int LANGUAGE plpgsql AS $$
DECLARE
  N1 int;
  N2 int;
  N3 int;
  N4 int;
  
BEGIN
  N1=12;
  N2=20;
  N3=15;
  N4=18;
  RETURN 
    (N1+N2+N3+N4)/4;
END
$$;

SELECT ejemplo2()

*****************EJEMPLO3*****************


CREATE OR REPLACE FUNCTION ejemplo3(in PAIS CHARACTER (10)) RETURNS SETOF "record" AS 
$BODY$

SELECT  PAS.idpasajero, PAS.nombres,   PAS.idpais,  PAS.telefono,  PAS.email   
FROM  Pasajero PAS
WHERE PAS.IdPais = (select IdPais
                    from Pais
                    where Pais.Pais=PAIS);

$BODY$
LANGUAGE sql VOLATILE;
--UTILIZA CUANQUIER SELECT
SELECT EJEMPLO3()
---ESTE NO
SELECT * FROM ejemplo3('PERU') AS ("idpasajero" CHARACTER,"nombres" TEXT,"idpais" TEXT,"telefono" TEXT,"email" TEXT);


*********************EJEMPLO4***************



******NO ME ALCANZA EL TIEMPO*****
****ME HUBIERAS PASADO MAS ANTES****
**ME MANDAS UN IMBOS AL FACE A Q HORA TE TOCA Y TU DUDA****





**************Ejemplo TRANSACCIONES***************

((((((http://xomalli.blogspot.com/2013/03/entendiendo-transacciones-con-postgresql.html))))))

CREATE OR REPLACE FUNCTION actualizar_nombre() RETURNS TRIGGER AS $trigger_ejemplo$
  BEGIN
       NEW.nombre := NEW.pat_pad || ' ' || NEW.mat_pad || ' ' || NEW.nom_pad ;
       RETURN NEW;
  END;
$trigger_ejemplo$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_ejemplo
BEFORE INSERT OR UPDATE ON 'tu_tabla'
    FOR EACH ROW EXECUTE PROCEDURE actualizar_nombre();


***************TRIGGER******************
CREATE OR REPLACE FUNCTION actualizar_nombre() RETURNS TRIGGER AS $trigger_ejemplo$
  BEGIN
       NEW.nombre := NEW.pat_pad || ' ' || NEW.mat_pad || ' ' || NEW.nom_pad ;
       RETURN NEW;
  END;
$trigger_ejemplo$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_ejemplo
BEFORE INSERT OR UPDATE ON 'tu_tabla'
    FOR EACH ROW EXECUTE PROCEDURE actualizar_nombre();
*********************************************



***************FUNCIONES*********************
Creamos una funci贸n que reciba dos enteros y retorne la suma de los mismos:

 create or replace function sumar(integer,integer) returns integer 
 AS 
   'select $1+$2;'
 language sql;
Llamamos la funci贸n que acabamos de crear:

 select sumar(3,4);
Creamos la tabla usuarios:

 create table usuarios (
   nombre varchar(30),
   clave varchar(10)
 );
Insertamos un conjunto de registros:

 insert into usuarios (nombre, clave) values ('Marcelo','Boca');
 insert into usuarios (nombre, clave) values ('JuanPerez','Juancito');
 insert into usuarios (nombre, clave) values ('Susana','River');
 insert into usuarios (nombre, clave) values ('Luis','River');
Creamos una funci贸n que reciba una cadena con el nombre de usuario y retorne la clave de dicho usuario:

 create or replace function retornarclave(varchar) returns varchar
 as
   'select clave from usuarios where nombre=$1;'
 language sql;
Llamamos la funci贸n recuperando la clave del usuario llamada 'Susana':

 select retornarclave('Susana');
 